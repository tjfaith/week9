<%- include('./layout/header.ejs') %>
  <style>
    .dashboard {
      background-color: #f5f5f5;
      padding: 0 0 8rem 0;
    }
  </style>

  <div class="d-flex">
    <div class="d-flex flex-column p-3 bg-light vh-100" style="width: 280px">
      <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none">
        <svg class="bi me-2" width="40" height="32">
          <use xlink:href="#bootstrap" />
        </svg>

        <div class="dropdown">
          <a href="#" class="d-flex align-items-center link-dark text-decoration-none dropdown-toggle"
            id="dropdownUser2" data-bs-toggle="dropdown" aria-expanded="false">
            <img src="<%= data.author_icon %>" alt="" width="80" height="80" class="rounded-circle me-2" />
            <strong>
              <%= data.author.substring(0,10) %>...
            </strong>
          </a>
          <ul class="dropdown-menu text-small shadow" aria-labelledby="dropdownUser2"> 
            <li><a class="dropdown-item" href="" data-toggle="modal" data-target="#updateData">Update Data</a></li>
            <li>
            </li>
            <li><a class="dropdown-item" href="#" id="logout">Logout</a></li>
              <hr class="dropdown-divider" />
            </li>
            <li><a class="dropdown-item text-danger" href="#" id="delete_account">Delete Account</a></li>
          </ul>
        </div>
      </a>
      <hr />
      <ul class="nav nav-pills flex-column mb-auto">
        <li class="nav-item">
          <a href="#" class="nav-link active" aria-current="page">
            <svg class="bi me-2" width="16" height="16">
              <use xlink:href="#home" />
            </svg>
            My Books
          </a>
        </li>
        <li>
          <a href="" id="addBook" class="nav-link link-dark" data-toggle="modal" data-target="#exampleModalCenter">
            <svg class="bi me-2" width="16" height="16">
              <use xlink:href="#speedometer2" />
            </svg>
            Add new book +
          </a>
        </li>
      </ul>
      <hr />
    </div>

    <!-- MIDDLE PAGE -->
    <div class="container">
      <div class="justify-content-center">
        <div class="m-5 w-100 d-flex flex-wrap">
          <% if (data.books.length>0){ data.books.forEach(bkData => { %>

            <a href="/books/<%= bkData.id %>" class="col-md-3 m-2 d-flex w-75"  >
              <div class="card card-body flex-fill p-0">
                <img class="card-img-top bookIcon h-100 w-100 img-fluid" src="<%= bkData.icon %>" alt="..." />
                <div class="card-body p-2">
                  <h5 class="fw-bolder text-center">
                    <%= bkData.name %>
                  </h5>
                  <hr />
                  <div class="text-justify">
                    <small class="text-secondary" >Author:<%= data.author %></small><br />
                    <small class="text-secondary">Serial Number: <%= bkData.serialNumber %></small><br />
                    <small>Date published: <%= new Date(bkData.datePublished).toLocaleDateString() ; %> </small>
                  </div>
                </div>
              </div>
            </a>

            <% }) }else{ %>
              <h2>NO BOOK TO DISPLAY</h2>
              <% } %>
        </div>
      </div>
    </div>
  </div>


  <%- include('./components/create_book.ejs') %>
  <%- include('./components/update_author.ejs') %>



      <%- include('./layout/footer') %>

        <script>
      

          //  request function 
          const reqFunction = (method, url, data=null) => {
     
            axios({
              method: method,
              url: url,
              data: JSON.stringify(data),
              headers: { "Content-Type": "application/json" },
            })
              .then((response) => {
                // console.log(response);
                if (response.data.message){
                  alert(response.data.message)
                  location.reload()
                }
              })
              .catch((err) => {
                console.log(err);
                // console.log(err.response.data.message);
                // login_error.innerHTML = err.response.data.message;
              });
          }



          // DELETE ACCOUNT
          document.getElementById("delete_account").addEventListener("click", () => {
            if (confirm("Are you sure you want to delete your account? This action cannot be undone. ALL YOUR BOOKS WOULD BE DELETED AS WELL.")) {
              
          axios({
              method: 'DELETE',
              url: 'author/delete',
            })
              .then((response) => {
                if (response.data.message){
                  alert(response.data.message)
                  localStorage.removeItem("loggedIn");
                  window.location.href = "/"
                }
              })
              .catch((err) => {
                console.log(err);
                // console.log(err.response.data.message);
                // login_error.innerHTML = err.response.data.message;
              });
          }
          })

          // Log out author
document.getElementById("logout").addEventListener("click", () => {
  fetch("/author/logout", {
    method: "GET",
  })
    .then((res) => res.json())
    .then((data) => {
      if ((data.message = "successful")) {
        window.location.href = "/";
      }
    })
    .catch((error) => {
      alert(error);
    });
});
        </script>